{"version":3,"sources":["Components/Join.jsx","Components/Chat.jsx","App.js","serviceWorker.js","index.js"],"names":["Join","props","setName","event","setState","name","target","value","setRoom","room","roomHandle","state","alert","localStorage","history","push","this","Modal","Dialog","Header","Title","Body","className","onChange","Footer","Button","variant","onClick","React","Component","Chat","LogOutHandle","a","socket","emit","clear","sendMessage","preventDefault","message","setMesssage","checkMessage","key","onEmojiClick","emojiObject","concat","emoji","toggleEmojiPicker","pickerToggle","messages","io","error","on","show","closeButton","onHide","map","index","console","log","user","trim","toLowerCase","text","onKeyPress","class","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f3ea2cec.chunk.js","sourcesContent":["import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nclass Join extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tname : '',\r\n\t\t\troom : ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif(localStorage.name && localStorage.room)\r\n\t\t{\r\n\t\t\tthis.props.history.push('/chat')\r\n\t\t}\r\n\t}\r\n\tsetName = (event)=>{\r\n\t\tthis.setState({name : event.target.value})\r\n\t}\r\n\tsetRoom = (event)=>{\r\n\t\tthis.setState({room : event.target.value})\r\n\t}\r\n\troomHandle = ()=>{\r\n\t\tif(this.state.name === '' || this.state.room === '')\r\n\t\t{\r\n\t\t\talert('Enter Correct Details')\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlocalStorage.name = this.state.name;\r\n\t\t\tlocalStorage.room = this.state.room;\r\n\t\t\tthis.props.history.push('/chat')\r\n\t\t}\r\n\t}\r\n\trender()\r\n\t{\r\n\t\treturn <Modal.Dialog>\r\n  \t\t\t\t<Modal.Header>\r\n    \t\t\t\t<Modal.Title>Join</Modal.Title>\r\n  \t\t\t\t</Modal.Header>\r\n\r\n  \t\t\t\t<Modal.Body>\r\n\t\t\t\t  <form>\r\n\t\t\t\t  \t<div className=\"form-group\">\r\n\t\t\t\t  \t\t<label>Name : </label>\r\n\t\t\t\t  \t\t<input className=\"form-control\" onChange={this.setName}/>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t  \t<div className=\"form-group\">\r\n\t\t\t\t  \t\t<label>Room : </label>\r\n\t\t\t\t  \t\t<input className=\"form-control\" onChange={this.setRoom}/>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t  </form>\r\n  \t\t\t\t</Modal.Body>\r\n\t\t\t  <Modal.Footer>\r\n\t\t\t    <Button variant=\"primary\" onClick={this.roomHandle}>Join Room</Button>\r\n\t\t\t  </Modal.Footer>\r\n\t\t\t</Modal.Dialog>\r\n\t}\r\n}\r\n\r\nexport default Join","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport io from 'socket.io-client'\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\nimport Picker from 'emoji-picker-react';\t\r\nclass Chat extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tname : localStorage.name,\r\n\t\t\troom : localStorage.room,\r\n\t\t\tmessage : '',\r\n\t\t\tmessages : [],\r\n\t\t\tsocket : '',\r\n\t\t\tpickerToggle : false\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif(!(localStorage.name && localStorage.room))\r\n\t\t{\r\n\t\t\tlocalStorage.clear()\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst ENDPOINT = \"/\"\r\n\t\t\tlet socket = io(ENDPOINT)\r\n\t\t\tthis.setState({socket:socket})\r\n\t\t\tsocket.emit('join',{name : this.state.name,room : this.state.room},(error)=>{\r\n\t\t\t\talert(error)\r\n\t\t\t\tlocalStorage.clear();\r\n\t\t\t\tthis.props.history.push('/')\r\n\t\t\t})\r\n\t\t\tsocket.on('message',(message)=>{\r\n\t\t\t\t\t\tlet messages = this.state.messages;\r\n\t\t\t\t\t\tmessages.push(message);\r\n\t\t\t\t\t\tthis.setState({messages : messages})\r\n\t\t\t\t\t})\r\n\t\t\r\n\t\t}\r\n\t}\r\n\tLogOutHandle = async ()=>{\r\n\t\tawait this.state.socket.emit('logout')\r\n\t\tlocalStorage.clear()\r\n\t\tthis.props.history.push('/')\r\n\t}\r\n\tsendMessage = (event)=>{\r\n\t\tevent.preventDefault()\r\n\r\n\t\tif(this.state.message)\r\n\t\t{\r\n\t\t\tthis.state.socket.emit('sendMessage',this.state.message,()=>this.setState({message : ''}))\r\n\t\t}\r\n\t}\r\n\tsetMesssage = (event) =>{\r\n\t\tthis.setState({message : event.target.value})\r\n\t}\r\n\tcheckMessage = (event)=>{\r\n\t\tif(event.key ==='Enter')\r\n\t\t{\r\n\t\t\tthis.sendMessage(event);\r\n\t\t}\r\n\t}\r\n\tonEmojiClick = (event,emojiObject)=>{\r\n\t\tlet message = this.state.message.concat(emojiObject.emoji)\r\n\t\tthis.setState({message:message})\r\n\t}\r\n\ttoggleEmojiPicker = ()=>{\r\n\t\tthis.setState({pickerToggle : !this.state.pickerToggle})\r\n\t}\r\n\trender()\r\n\t{\r\n\t\tconst show = this.state.pickerToggle ? '' : 'd-none'\r\n\t\treturn <Modal.Dialog className=\"border-0 rounded-0\">\r\n  \t\t\t\t<Modal.Header closeButton onHide={this.LogOutHandle} className=\"border-0 text-light text-center bg-primary\">\r\n    \t\t\t\t<Modal.Title className=\"text-capitalize\">{this.state.room}</Modal.Title>\r\n  \t\t\t\t</Modal.Header>\r\n  \t\t\t\t<Modal.Body className=\"border-0 bg-dark text-light\">\r\n  \t\t\t\t\t<div className=\"container m-0 p-0\">\r\n  \t\t\t\t\t<ScrollToBottom className=\"chatBox\">\r\n  \t\t\t\t\t{\r\n  \t\t\t\t\t\tthis.state.messages.map((message,index)=>{\r\n  \t\t\t\t\t\t\tconsole.log(message)\r\n  \t\t\t\t\t\t\tif(message.user === this.state.name.trim().toLowerCase())\r\n  \t\t\t\t\t\t\t{\r\n  \t\t\t\t\t\t\t\treturn(\r\n  \t\t\t\t\t\t\t\t\t<div className=\"text-light text-right p-0 m-0\">\t\t\r\n  \t\t\t\t\t\t\t\t\t\t<p key={index}><span className=\"text rounded p-2 mx-1 bg-info\"><b><span className=\"text-capitalize\">You</span> :</b> {message.text}</span></p>\r\n  \t\t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t\t)\t\t\t\r\n  \t\t\t\t\t\t\t}\r\n  \t\t\t\t\t\t\tif(message.user === 'admin')\r\n  \t\t\t\t\t\t\t{\r\n  \t\t\t\t\t\t\t\treturn(\r\n  \t\t\t\t\t\t\t\t\t<div className=\"text-light text-center\">\t\t\r\n  \t\t\t\t\t\t\t\t\t\t<p key={index} className=\"p-2\">{message.text}</p>\r\n  \t\t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t\t)\r\n  \t\t\t\t\t\t\t}\r\n  \t\t\t\t\t\t\treturn \t<div className=\"rounded text-dark text-left p-0 m-0\">\r\n  \t\t\t\t\t\t\t\t<p key={index}><span className=\"text rounded p-2 mx-1 bg-light\"><b><span className=\"text-capitalize\">{message.user}</span> :</b> {message.text}</span></p>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t})\r\n  \t\t\t\t\t}\t\r\n  \t\t\t\t\t</ScrollToBottom>\r\n  \t\t\t\t\t</div>\r\n  \t\t\t\t</Modal.Body>\r\n\t\t\t  <Modal.Footer className=\"border-0 p-0 m-0 rounded-0\">\r\n\t\t\t  <div className=\"input-group p-0 m-0 border-0 rounded-0\">\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t<input value={this.state.message} className=\"form-control rounded-0\" onChange={this.setMesssage} onKeyPress={this.checkMessage}/>\r\n\t\t\t  \t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t<button onClick={this.toggleEmojiPicker} className=\"btn\"><i class=\"far fa-grin\"></i></button>\r\n\t\t\t    \t\t<button className=\"btn btn-primary border-0 sendButton rounded-0\" onClick={this.sendMessage}><i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t    \t</div>\r\n\t\t\t    </div>\r\n\t\t\t    <div className={show}>\r\n\t\t\t    \t<Picker onEmojiClick={this.onEmojiClick}/>\r\n\t\t\t    </div>\r\n\t\t\t  </Modal.Footer>\r\n\t\t\t</Modal.Dialog>\r\n\t}\r\n}\r\n\r\nexport default  Chat","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport './App.css';\nimport './Components/style.css'\nimport Join from './Components/Join'\nimport Chat from './Components/Chat'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nclass App extends React.Component\n{\n  render()\n  {\n    return <Router>\n    \t<Route exact path=\"/\" component = {Join}/>\n    \t<Route exact path=\"/chat\" component = {Chat}/>\n    </Router>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}